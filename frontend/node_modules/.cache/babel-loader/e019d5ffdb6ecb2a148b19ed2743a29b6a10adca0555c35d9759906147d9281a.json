{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Desktop\\\\Q1_2025Carlos\\\\proyecto\\\\frontend\\\\src\\\\components\\\\AdminDashboard.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AdminDashboard = () => {\n  _s();\n  const [clinics, setClinics] = useState([]);\n  useEffect(() => {\n    const fetchClinics = async () => {\n      try {\n        const response = await axios.get('http://localhost:5002/api/admin/clinics', {\n          headers: {\n            Authorization: `Bearer ${localStorage.getItem('token')}`\n          }\n        });\n        setClinics(response.data);\n      } catch (error) {\n        console.error('Error fetching clinics:', error);\n      }\n    };\n    fetchClinics();\n  }, []);\n  if (!Array.isArray(clinics)) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Error: clinics is not an array\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 16\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Admin Dashboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: clinics.map(clinic => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: clinic.nombre\n      }, clinic.id_clinica, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 9\n  }, this);\n};\n_s(AdminDashboard, \"vjbMqqFXul9QX4q/vhrigqzeYzQ=\");\n_c = AdminDashboard;\nexport default AdminDashboard;\nvar _c;\n$RefreshReg$(_c, \"AdminDashboard\");","map":{"version":3,"names":["React","useEffect","useState","axios","jsxDEV","_jsxDEV","AdminDashboard","_s","clinics","setClinics","fetchClinics","response","get","headers","Authorization","localStorage","getItem","data","error","console","Array","isArray","children","fileName","_jsxFileName","lineNumber","columnNumber","map","clinic","nombre","id_clinica","_c","$RefreshReg$"],"sources":["C:/Users/User/Desktop/Q1_2025Carlos/proyecto/frontend/src/components/AdminDashboard.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst AdminDashboard = () => {\r\n    const [clinics, setClinics] = useState([]);\r\n\r\n    useEffect(() => {\r\n        const fetchClinics = async () => {\r\n            try {\r\n                const response = await axios.get('http://localhost:5002/api/admin/clinics', {\r\n                    headers: {\r\n                        Authorization: `Bearer ${localStorage.getItem('token')}`\r\n                    }\r\n                });\r\n                setClinics(response.data);\r\n            } catch (error) {\r\n                console.error('Error fetching clinics:', error);\r\n            }\r\n        };\r\n\r\n        fetchClinics();\r\n    }, []);\r\n\r\n    if (!Array.isArray(clinics)) {\r\n        return <div>Error: clinics is not an array</div>;\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <h1>Admin Dashboard</h1>\r\n            <ul>\r\n                {clinics.map((clinic) => (\r\n                    <li key={clinic.id_clinica}>{clinic.nombre}</li>\r\n                ))}\r\n            </ul>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default AdminDashboard;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,cAAc,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACzB,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAE1CD,SAAS,CAAC,MAAM;IACZ,MAAMS,YAAY,GAAG,MAAAA,CAAA,KAAY;MAC7B,IAAI;QACA,MAAMC,QAAQ,GAAG,MAAMR,KAAK,CAACS,GAAG,CAAC,yCAAyC,EAAE;UACxEC,OAAO,EAAE;YACLC,aAAa,EAAE,UAAUC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;UAC1D;QACJ,CAAC,CAAC;QACFP,UAAU,CAACE,QAAQ,CAACM,IAAI,CAAC;MAC7B,CAAC,CAAC,OAAOC,KAAK,EAAE;QACZC,OAAO,CAACD,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAAC;MACnD;IACJ,CAAC;IAEDR,YAAY,CAAC,CAAC;EAClB,CAAC,EAAE,EAAE,CAAC;EAEN,IAAI,CAACU,KAAK,CAACC,OAAO,CAACb,OAAO,CAAC,EAAE;IACzB,oBAAOH,OAAA;MAAAiB,QAAA,EAAK;IAA8B;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC;EACpD;EAEA,oBACIrB,OAAA;IAAAiB,QAAA,gBACIjB,OAAA;MAAAiB,QAAA,EAAI;IAAe;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACxBrB,OAAA;MAAAiB,QAAA,EACKd,OAAO,CAACmB,GAAG,CAAEC,MAAM,iBAChBvB,OAAA;QAAAiB,QAAA,EAA6BM,MAAM,CAACC;MAAM,GAAjCD,MAAM,CAACE,UAAU;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAqB,CAClD;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACF,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACJ,CAAC;AAEd,CAAC;AAACnB,EAAA,CAlCID,cAAc;AAAAyB,EAAA,GAAdzB,cAAc;AAoCpB,eAAeA,cAAc;AAAC,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}