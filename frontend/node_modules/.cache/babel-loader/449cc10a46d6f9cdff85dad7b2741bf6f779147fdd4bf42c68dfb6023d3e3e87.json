{"ast":null,"code":"export const fetchChatbotData = async () => {\n  try {\n    // Datos de especialidades\n    const specialtiesRes = await fetch('http://localhost:5002/api/specialties');\n    const specialties = await specialtiesRes.json();\n\n    // Datos básicos de clínicas\n    const clinicsRes = await fetch('http://localhost:5002/api/clinics/basic');\n    const clinics = await clinicsRes.json();\n\n    // Datos de horarios generales\n    const schedule = {\n      general: \"Lunes a Viernes de 8:00 AM a 6:00 PM, Sábados de 8:00 AM a 1:00 PM\",\n      duracionCita: \"30 minutos en promedio\"\n    };\n    return {\n      especialidades: specialties || [],\n      clinicas: clinics || [],\n      horarios: schedule\n    };\n  } catch (error) {\n    console.error(\"Error al obtener datos para el chatbot:\", error);\n    return {\n      especialidades: [],\n      clinicas: [],\n      horarios: {\n        general: \"Lunes a Viernes de 8:00 AM a 6:00 PM\",\n        duracionCita: \"30 minutos\"\n      }\n    };\n  }\n};\nexport const fetchSpecialtyDetails = async specialtyId => {\n  try {\n    const response = await fetch(`http://localhost:5002/api/chatbot/specialties/${specialtyId}`);\n    if (response.ok) {\n      return await response.json();\n    }\n    return null;\n  } catch (error) {\n    console.error(\"Error al obtener detalles de especialidad:\", error);\n    return null;\n  }\n};\nexport const fetchClinicDetails = async clinicId => {\n  try {\n    const response = await fetch(`http://localhost:5002/api/chatbot/clinics/${clinicId}`);\n    if (response.ok) {\n      return await response.json();\n    }\n    return null;\n  } catch (error) {\n    console.error(\"Error al obtener detalles de clínica:\", error);\n    return null;\n  }\n};","map":{"version":3,"names":["fetchChatbotData","specialtiesRes","fetch","specialties","json","clinicsRes","clinics","schedule","general","duracionCita","especialidades","clinicas","horarios","error","console","fetchSpecialtyDetails","specialtyId","response","ok","fetchClinicDetails","clinicId"],"sources":["C:/Users/User/Desktop/Q1_2025Carlos/proyecto/frontend/src/Apis/api.js"],"sourcesContent":["export const fetchChatbotData = async () => {\r\n    try {\r\n      // Datos de especialidades\r\n      const specialtiesRes = await fetch('http://localhost:5002/api/specialties');\r\n      const specialties = await specialtiesRes.json();\r\n      \r\n      // Datos básicos de clínicas\r\n      const clinicsRes = await fetch('http://localhost:5002/api/clinics/basic');\r\n      const clinics = await clinicsRes.json();\r\n      \r\n      // Datos de horarios generales\r\n      const schedule = {\r\n        general: \"Lunes a Viernes de 8:00 AM a 6:00 PM, Sábados de 8:00 AM a 1:00 PM\",\r\n        duracionCita: \"30 minutos en promedio\"\r\n      };\r\n      \r\n      return {\r\n        especialidades: specialties || [],\r\n        clinicas: clinics || [],\r\n        horarios: schedule\r\n      };\r\n    } catch (error) {\r\n      console.error(\"Error al obtener datos para el chatbot:\", error);\r\n      return { \r\n        especialidades: [], \r\n        clinicas: [],\r\n        horarios: {\r\n          general: \"Lunes a Viernes de 8:00 AM a 6:00 PM\",\r\n          duracionCita: \"30 minutos\"\r\n        }\r\n      };\r\n    }\r\n  };\r\n  \r\n  export const fetchSpecialtyDetails = async (specialtyId) => {\r\n    try {\r\n      const response = await fetch(`http://localhost:5002/api/chatbot/specialties/${specialtyId}`);\r\n      if (response.ok) {\r\n        return await response.json();\r\n      }\r\n      return null;\r\n    } catch (error) {\r\n      console.error(\"Error al obtener detalles de especialidad:\", error);\r\n      return null;\r\n    }\r\n  };\r\n  \r\n  export const fetchClinicDetails = async (clinicId) => {\r\n    try {\r\n      const response = await fetch(`http://localhost:5002/api/chatbot/clinics/${clinicId}`);\r\n      if (response.ok) {\r\n        return await response.json();\r\n      }\r\n      return null;\r\n    } catch (error) {\r\n      console.error(\"Error al obtener detalles de clínica:\", error);\r\n      return null;\r\n    }\r\n  };"],"mappings":"AAAA,OAAO,MAAMA,gBAAgB,GAAG,MAAAA,CAAA,KAAY;EACxC,IAAI;IACF;IACA,MAAMC,cAAc,GAAG,MAAMC,KAAK,CAAC,uCAAuC,CAAC;IAC3E,MAAMC,WAAW,GAAG,MAAMF,cAAc,CAACG,IAAI,CAAC,CAAC;;IAE/C;IACA,MAAMC,UAAU,GAAG,MAAMH,KAAK,CAAC,yCAAyC,CAAC;IACzE,MAAMI,OAAO,GAAG,MAAMD,UAAU,CAACD,IAAI,CAAC,CAAC;;IAEvC;IACA,MAAMG,QAAQ,GAAG;MACfC,OAAO,EAAE,oEAAoE;MAC7EC,YAAY,EAAE;IAChB,CAAC;IAED,OAAO;MACLC,cAAc,EAAEP,WAAW,IAAI,EAAE;MACjCQ,QAAQ,EAAEL,OAAO,IAAI,EAAE;MACvBM,QAAQ,EAAEL;IACZ,CAAC;EACH,CAAC,CAAC,OAAOM,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,yCAAyC,EAAEA,KAAK,CAAC;IAC/D,OAAO;MACLH,cAAc,EAAE,EAAE;MAClBC,QAAQ,EAAE,EAAE;MACZC,QAAQ,EAAE;QACRJ,OAAO,EAAE,sCAAsC;QAC/CC,YAAY,EAAE;MAChB;IACF,CAAC;EACH;AACF,CAAC;AAED,OAAO,MAAMM,qBAAqB,GAAG,MAAOC,WAAW,IAAK;EAC1D,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAMf,KAAK,CAAC,iDAAiDc,WAAW,EAAE,CAAC;IAC5F,IAAIC,QAAQ,CAACC,EAAE,EAAE;MACf,OAAO,MAAMD,QAAQ,CAACb,IAAI,CAAC,CAAC;IAC9B;IACA,OAAO,IAAI;EACb,CAAC,CAAC,OAAOS,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,4CAA4C,EAAEA,KAAK,CAAC;IAClE,OAAO,IAAI;EACb;AACF,CAAC;AAED,OAAO,MAAMM,kBAAkB,GAAG,MAAOC,QAAQ,IAAK;EACpD,IAAI;IACF,MAAMH,QAAQ,GAAG,MAAMf,KAAK,CAAC,6CAA6CkB,QAAQ,EAAE,CAAC;IACrF,IAAIH,QAAQ,CAACC,EAAE,EAAE;MACf,OAAO,MAAMD,QAAQ,CAACb,IAAI,CAAC,CAAC;IAC9B;IACA,OAAO,IAAI;EACb,CAAC,CAAC,OAAOS,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,uCAAuC,EAAEA,KAAK,CAAC;IAC7D,OAAO,IAAI;EACb;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}