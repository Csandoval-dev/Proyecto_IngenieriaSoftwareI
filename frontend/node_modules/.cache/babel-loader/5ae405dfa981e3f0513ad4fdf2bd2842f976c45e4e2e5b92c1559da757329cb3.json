{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Desktop\\\\Q1_2025Carlos\\\\proyecto\\\\frontend\\\\src\\\\components\\\\AdminDashboard.jsx\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AdminDashboard = () => {\n  _s();\n  const [clinics, setClinics] = useState([]);\n  const [clinicAdmins, setClinicAdmins] = useState([]);\n  const [pendingClinics, setPendingClinics] = useState([]);\n  useEffect(() => {\n    const fetchClinics = async () => {\n      try {\n        const response = await fetch('http://localhost:5002/api/admin/clinics', {\n          headers: {\n            Authorization: `Bearer ${localStorage.getItem('token')}`\n          }\n        });\n        const data = await response.json();\n        console.log('Clinics:', data); // Verificar la respuesta\n        setClinics(Array.isArray(data) ? data : []);\n      } catch (error) {\n        console.error('Error fetching clinics:', error);\n      }\n    };\n    const fetchClinicAdmins = async () => {\n      try {\n        const response = await fetch('http://localhost:5002/api/admin/clinic-admins', {\n          headers: {\n            Authorization: `Bearer ${localStorage.getItem('token')}`\n          }\n        });\n        const data = await response.json();\n        console.log('Clinic Admins:', data); // Verificar la respuesta\n        setClinicAdmins(Array.isArray(data) ? data : []);\n      } catch (error) {\n        console.error('Error fetching clinic admins:', error);\n      }\n    };\n    const fetchPendingClinics = async () => {\n      try {\n        const response = await fetch('http://localhost:5002/api/admin/pending-clinics', {\n          headers: {\n            Authorization: `Bearer ${localStorage.getItem('token')}`\n          }\n        });\n        const data = await response.json();\n        console.log('Pending Clinics:', data); // Verificar la respuesta\n        setPendingClinics(Array.isArray(data) ? data : []);\n      } catch (error) {\n        console.error('Error fetching pending clinics:', error);\n      }\n    };\n    fetchClinics();\n    fetchClinicAdmins();\n    fetchPendingClinics();\n  }, []);\n  const approveClinic = async id_clinica => {\n    try {\n      const response = await fetch(`http://localhost:5002/api/admin/approve-clinic/${id_clinica}`, {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json',\n          Authorization: `Bearer ${localStorage.getItem('token')}`\n        }\n      });\n      if (response.ok) {\n        setPendingClinics(pendingClinics.filter(clinic => clinic.id_clinica !== id_clinica));\n      } else {\n        console.error('Error al aprobar clínica');\n      }\n    } catch (error) {\n      console.error('Error:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Dashboard del Administrador General\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Cl\\xEDnicas Registradas\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: clinics.map(clinic => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: clinic.nombre\n      }, clinic.id_clinica, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Administradores de Cl\\xEDnicas\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: clinicAdmins.map(admin => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [admin.nombre, \" - \", admin.email]\n      }, admin.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Cl\\xEDnicas Pendientes de Aprobaci\\xF3n\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: pendingClinics.map(clinic => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [clinic.nombre, \" (\", clinic.estado, \")\", /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => approveClinic(clinic.id_clinica),\n          children: \"Aprobar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 25\n        }, this)]\n      }, clinic.id_clinica, true, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 9\n  }, this);\n};\n_s(AdminDashboard, \"U+bX3C42LW1XeQKHLMYOSPWI1KM=\");\n_c = AdminDashboard;\nexport default AdminDashboard;\nvar _c;\n$RefreshReg$(_c, \"AdminDashboard\");","map":{"version":3,"names":["useEffect","useState","jsxDEV","_jsxDEV","AdminDashboard","_s","clinics","setClinics","clinicAdmins","setClinicAdmins","pendingClinics","setPendingClinics","fetchClinics","response","fetch","headers","Authorization","localStorage","getItem","data","json","console","log","Array","isArray","error","fetchClinicAdmins","fetchPendingClinics","approveClinic","id_clinica","method","ok","filter","clinic","children","fileName","_jsxFileName","lineNumber","columnNumber","map","nombre","admin","email","id","estado","onClick","_c","$RefreshReg$"],"sources":["C:/Users/User/Desktop/Q1_2025Carlos/proyecto/frontend/src/components/AdminDashboard.jsx"],"sourcesContent":["import { useEffect, useState } from 'react';\r\n\r\nconst AdminDashboard = () => {\r\n    const [clinics, setClinics] = useState([]);\r\n    const [clinicAdmins, setClinicAdmins] = useState([]);\r\n    const [pendingClinics, setPendingClinics] = useState([]);\r\n\r\n    useEffect(() => {\r\n        const fetchClinics = async () => {\r\n            try {\r\n                const response = await fetch('http://localhost:5002/api/admin/clinics', {\r\n                    headers: { Authorization: `Bearer ${localStorage.getItem('token')}` }\r\n                });\r\n                const data = await response.json();\r\n                console.log('Clinics:', data); // Verificar la respuesta\r\n                setClinics(Array.isArray(data) ? data : []);\r\n            } catch (error) {\r\n                console.error('Error fetching clinics:', error);\r\n            }\r\n        };\r\n\r\n        const fetchClinicAdmins = async () => {\r\n            try {\r\n                const response = await fetch('http://localhost:5002/api/admin/clinic-admins', {\r\n                    headers: { Authorization: `Bearer ${localStorage.getItem('token')}` }\r\n                });\r\n                const data = await response.json();\r\n                console.log('Clinic Admins:', data); // Verificar la respuesta\r\n                setClinicAdmins(Array.isArray(data) ? data : []);\r\n            } catch (error) {\r\n                console.error('Error fetching clinic admins:', error);\r\n            }\r\n        };\r\n\r\n        const fetchPendingClinics = async () => {\r\n            try {\r\n                const response = await fetch('http://localhost:5002/api/admin/pending-clinics', {\r\n                    headers: { Authorization: `Bearer ${localStorage.getItem('token')}` }\r\n                });\r\n                const data = await response.json();\r\n                console.log('Pending Clinics:', data); // Verificar la respuesta\r\n                setPendingClinics(Array.isArray(data) ? data : []);\r\n            } catch (error) {\r\n                console.error('Error fetching pending clinics:', error);\r\n            }\r\n        };\r\n\r\n        fetchClinics();\r\n        fetchClinicAdmins();\r\n        fetchPendingClinics();\r\n    }, []);\r\n\r\n    const approveClinic = async (id_clinica) => {\r\n        try {\r\n            const response = await fetch(`http://localhost:5002/api/admin/approve-clinic/${id_clinica}`, {\r\n                method: 'PUT',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                    Authorization: `Bearer ${localStorage.getItem('token')}`\r\n                }\r\n            });\r\n            \r\n            if (response.ok) {\r\n                setPendingClinics(pendingClinics.filter(clinic => clinic.id_clinica !== id_clinica));\r\n            } else {\r\n                console.error('Error al aprobar clínica');\r\n            }\r\n        } catch (error) {\r\n            console.error('Error:', error);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <h1>Dashboard del Administrador General</h1>\r\n            \r\n            <h2>Clínicas Registradas</h2>\r\n            <ul>\r\n                {clinics.map((clinic) => (\r\n                    <li key={clinic.id_clinica}>{clinic.nombre}</li>\r\n                ))}\r\n            </ul>\r\n\r\n            <h2>Administradores de Clínicas</h2>\r\n            <ul>\r\n                {clinicAdmins.map((admin) => (\r\n                    <li key={admin.id}>{admin.nombre} - {admin.email}</li>\r\n                ))}\r\n            </ul>\r\n\r\n            <h2>Clínicas Pendientes de Aprobación</h2>\r\n            <ul>\r\n                {pendingClinics.map((clinic) => (\r\n                    <li key={clinic.id_clinica}>\r\n                        {clinic.nombre} ({clinic.estado})\r\n                        <button onClick={() => approveClinic(clinic.id_clinica)}>Aprobar</button>\r\n                    </li>\r\n                ))}\r\n            </ul>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default AdminDashboard;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}