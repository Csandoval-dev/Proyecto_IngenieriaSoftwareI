{"ast":null,"code":"export const detectUserIntent = message => {\n  const lowerMessage = message.toLowerCase();\n  if (/cita|agendar|reservar|programar/.test(lowerMessage)) {\n    return 'appointment_scheduling';\n  }\n  if (/especialidad|especialista|doctor|médico/.test(lowerMessage)) {\n    return 'doctor_search';\n  }\n  if (/precio|costo|tarifa|pagar/.test(lowerMessage)) {\n    return 'pricing';\n  }\n  if (/horario|disponibilidad|cuando|qué días/.test(lowerMessage)) {\n    return 'schedule_inquiry';\n  }\n  if (/clínica|centro|hospital|sede/.test(lowerMessage)) {\n    return 'clinic_info';\n  }\n  return 'general_inquiry';\n};\nexport const enrichContextWithData = async (message, chatbotData) => {\n  // Implementación de la función para obtener datos contextuales\n  // basados en la consulta del usuario\n  let contextualInfo = {};\n\n  // ... implementación aquí ...\n\n  return contextualInfo;\n};","map":{"version":3,"names":["detectUserIntent","message","lowerMessage","toLowerCase","test","enrichContextWithData","chatbotData","contextualInfo"],"sources":["C:/Users/User/Desktop/Q1_2025Carlos/proyecto/frontend/src/Apis/intentDetection.js"],"sourcesContent":["export const detectUserIntent = (message) => {\r\n    const lowerMessage = message.toLowerCase();\r\n    \r\n    if (/cita|agendar|reservar|programar/.test(lowerMessage)) {\r\n      return 'appointment_scheduling';\r\n    }\r\n    \r\n    if (/especialidad|especialista|doctor|médico/.test(lowerMessage)) {\r\n      return 'doctor_search';\r\n    }\r\n    \r\n    if (/precio|costo|tarifa|pagar/.test(lowerMessage)) {\r\n      return 'pricing';\r\n    }\r\n    \r\n    if (/horario|disponibilidad|cuando|qué días/.test(lowerMessage)) {\r\n      return 'schedule_inquiry';\r\n    }\r\n    \r\n    if (/clínica|centro|hospital|sede/.test(lowerMessage)) {\r\n      return 'clinic_info';\r\n    }\r\n    \r\n    return 'general_inquiry';\r\n  };\r\n  \r\n  export const enrichContextWithData = async (message, chatbotData) => {\r\n    // Implementación de la función para obtener datos contextuales\r\n    // basados en la consulta del usuario\r\n    let contextualInfo = {};\r\n    \r\n    // ... implementación aquí ...\r\n    \r\n    return contextualInfo;\r\n  };"],"mappings":"AAAA,OAAO,MAAMA,gBAAgB,GAAIC,OAAO,IAAK;EACzC,MAAMC,YAAY,GAAGD,OAAO,CAACE,WAAW,CAAC,CAAC;EAE1C,IAAI,iCAAiC,CAACC,IAAI,CAACF,YAAY,CAAC,EAAE;IACxD,OAAO,wBAAwB;EACjC;EAEA,IAAI,yCAAyC,CAACE,IAAI,CAACF,YAAY,CAAC,EAAE;IAChE,OAAO,eAAe;EACxB;EAEA,IAAI,2BAA2B,CAACE,IAAI,CAACF,YAAY,CAAC,EAAE;IAClD,OAAO,SAAS;EAClB;EAEA,IAAI,wCAAwC,CAACE,IAAI,CAACF,YAAY,CAAC,EAAE;IAC/D,OAAO,kBAAkB;EAC3B;EAEA,IAAI,8BAA8B,CAACE,IAAI,CAACF,YAAY,CAAC,EAAE;IACrD,OAAO,aAAa;EACtB;EAEA,OAAO,iBAAiB;AAC1B,CAAC;AAED,OAAO,MAAMG,qBAAqB,GAAG,MAAAA,CAAOJ,OAAO,EAAEK,WAAW,KAAK;EACnE;EACA;EACA,IAAIC,cAAc,GAAG,CAAC,CAAC;;EAEvB;;EAEA,OAAOA,cAAc;AACvB,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}