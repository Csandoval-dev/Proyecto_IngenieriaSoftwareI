{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Desktop\\\\Q1_2025Carlos\\\\proyecto\\\\frontend\\\\src\\\\components\\\\AdminDashboard.jsx\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AdminDashboard = () => {\n  _s();\n  const [clinics, setClinics] = useState([]);\n  const [clinicAdmins, setClinicAdmins] = useState([]);\n  const [pendingClinics, setPendingClinics] = useState([]);\n  useEffect(() => {\n    const fetchClinics = async () => {\n      const response = await fetch('http://localhost:5002/api/admin/clinics', {\n        headers: {\n          Authorization: localStorage.getItem('token')\n        }\n      });\n      const data = await response.json();\n      setClinics(data);\n    };\n    const fetchClinicAdmins = async () => {\n      const response = await fetch('http://localhost:5002/api/admin/clinic-admins', {\n        headers: {\n          Authorization: localStorage.getItem('token')\n        }\n      });\n      const data = await response.json();\n      setClinicAdmins(data);\n    };\n    const fetchPendingClinics = async () => {\n      const response = await fetch('http://localhost:5002/api/admin/pending-clinics', {\n        headers: {\n          Authorization: localStorage.getItem('token')\n        }\n      });\n      const data = await response.json();\n      setPendingClinics(data);\n    };\n    fetchClinics();\n    fetchClinicAdmins();\n    fetchPendingClinics();\n  }, []);\n  const approveClinic = async id_clinica => {\n    try {\n      const response = await fetch(`http://localhost:5002/api/clinics/approve/${id_clinica}`, {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json',\n          Authorization: localStorage.getItem('token')\n        }\n      });\n      if (response.ok) {\n        setPendingClinics(pendingClinics.filter(clinic => clinic.id_clinica !== id_clinica));\n      } else {\n        console.error('Error al aprobar clínica');\n      }\n    } catch (error) {\n      console.error('Error:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Dashboard del Administrador General\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Cl\\xEDnicas Registradas\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: clinics.map(clinic => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: clinic.nombre\n      }, clinic.id_clinica, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Administradores de Cl\\xEDnicas\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: clinicAdmins.map(admin => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [admin.nombre, \" - \", admin.email]\n      }, admin.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Cl\\xEDnicas Pendientes de Aprobaci\\xF3n\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: pendingClinics.map(clinic => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [clinic.nombre, \" (\", clinic.estado, \")\", /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => approveClinic(clinic.id_clinica),\n          children: \"Aprobar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 25\n        }, this)]\n      }, clinic.id_clinica, true, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 9\n  }, this);\n};\n_s(AdminDashboard, \"U+bX3C42LW1XeQKHLMYOSPWI1KM=\");\n_c = AdminDashboard;\nexport default AdminDashboard;\nvar _c;\n$RefreshReg$(_c, \"AdminDashboard\");","map":{"version":3,"names":["useEffect","useState","jsxDEV","_jsxDEV","AdminDashboard","_s","clinics","setClinics","clinicAdmins","setClinicAdmins","pendingClinics","setPendingClinics","fetchClinics","response","fetch","headers","Authorization","localStorage","getItem","data","json","fetchClinicAdmins","fetchPendingClinics","approveClinic","id_clinica","method","ok","filter","clinic","console","error","children","fileName","_jsxFileName","lineNumber","columnNumber","map","nombre","admin","email","id","estado","onClick","_c","$RefreshReg$"],"sources":["C:/Users/User/Desktop/Q1_2025Carlos/proyecto/frontend/src/components/AdminDashboard.jsx"],"sourcesContent":["import { useEffect, useState } from 'react';\r\n\r\nconst AdminDashboard = () => {\r\n    const [clinics, setClinics] = useState([]);\r\n    const [clinicAdmins, setClinicAdmins] = useState([]);\r\n    const [pendingClinics, setPendingClinics] = useState([]);\r\n\r\n    useEffect(() => {\r\n        const fetchClinics = async () => {\r\n            const response = await fetch('http://localhost:5002/api/admin/clinics', {\r\n                headers: { Authorization: localStorage.getItem('token') }\r\n            });\r\n            const data = await response.json();\r\n            setClinics(data);\r\n        };\r\n\r\n        const fetchClinicAdmins = async () => {\r\n            const response = await fetch('http://localhost:5002/api/admin/clinic-admins', {\r\n                headers: { Authorization: localStorage.getItem('token') }\r\n            });\r\n            const data = await response.json();\r\n            setClinicAdmins(data);\r\n        };\r\n\r\n        const fetchPendingClinics = async () => {\r\n            const response = await fetch('http://localhost:5002/api/admin/pending-clinics', {\r\n                headers: { Authorization: localStorage.getItem('token') }\r\n            });\r\n            const data = await response.json();\r\n            setPendingClinics(data);\r\n        };\r\n\r\n        fetchClinics();\r\n        fetchClinicAdmins();\r\n        fetchPendingClinics();\r\n    }, []);\r\n\r\n    const approveClinic = async (id_clinica) => {\r\n        try {\r\n            const response = await fetch(`http://localhost:5002/api/clinics/approve/${id_clinica}`, {\r\n                method: 'PUT',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                    Authorization: localStorage.getItem('token')\r\n                }\r\n            });\r\n            \r\n            if (response.ok) {\r\n                setPendingClinics(pendingClinics.filter(clinic => clinic.id_clinica !== id_clinica));\r\n            } else {\r\n                console.error('Error al aprobar clínica');\r\n            }\r\n        } catch (error) {\r\n            console.error('Error:', error);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <h1>Dashboard del Administrador General</h1>\r\n            \r\n            <h2>Clínicas Registradas</h2>\r\n            <ul>\r\n                {clinics.map((clinic) => (\r\n                    <li key={clinic.id_clinica}>{clinic.nombre}</li>\r\n                ))}\r\n            </ul>\r\n\r\n            <h2>Administradores de Clínicas</h2>\r\n            <ul>\r\n                {clinicAdmins.map((admin) => (\r\n                    <li key={admin.id}>{admin.nombre} - {admin.email}</li>\r\n                ))}\r\n            </ul>\r\n\r\n            <h2>Clínicas Pendientes de Aprobación</h2>\r\n            <ul>\r\n                {pendingClinics.map((clinic) => (\r\n                    <li key={clinic.id_clinica}>\r\n                        {clinic.nombre} ({clinic.estado})\r\n                        <button onClick={() => approveClinic(clinic.id_clinica)}>Aprobar</button>\r\n                    </li>\r\n                ))}\r\n            </ul>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default AdminDashboard;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}